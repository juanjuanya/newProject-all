{"version":3,"sources":["components/game.js","redux/action-types.js","redux/reducers.js","redux/store.js","api/ajax.js","api/index.js","containers/post/post-lists.js","containers/comment/comment.js","redux/actions.js","containers/header/header.js","containers/post/post.js","components/side-artical.js","components/side-bar.js","containers/post/post-view.js","containers/register/register.js","containers/login/login.js","containers/personal/my-posts-list.js","containers/personal/my-comments-list.js","containers/personal/personal.js","containers/main/main.js","index.js"],"names":["info","antd_es_message__WEBPACK_IMPORTED_MODULE_10__","shapes","map","shape","currShapeInfo","bak","run","Game","state","count","start","_this","stop","Math","random","fk","y","x","s","rotate","setInterval","down","clearInterval","eval","Array","join","setState","new","over","num","flip","length","i","update","is","t","slice","a2","toString","n","test","replace","substr","RegExp","$_","$1","document","getElementById","innerHTML","splice","unshift","a","move","arguments","undefined","k","_this2","this","react__WEBPACK_IMPORTED_MODULE_11___default","createElement","className","id","antd_es_button__WEBPACK_IMPORTED_MODULE_3__","type","onClick","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","theme","Component","AUTH_SUCCESS","ERROR_MSG","RECEIVE_USER","RESET_USER","POST_SUBMIT","RECEIVE_POSTLIST","RECEIVE_POST","SEND_COMMENT","RECEIVE_COMMENTS","RECEIVE_UPDATE_POST","RECEIVE_ALL_COMMENTS","RECEIVE_DELETE_POST","RECEIVE_DELETE_COMMENT","initUser","redirectTo","initPost","initPosts","initViewPost","initComment","initComments","initAllComments","combineReducers","user","action","Object","objectSpread","data","msg","post","posts","postview","comment","comments","allComments","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ajax","url","urlStr","keys","forEach","key","substring","axios","get","reqUpdatePost","reqUpdateUser","authSuccess","errorMsg","receiveUser","postSuccess","sendComment","resetUser","getPostList","_ref8","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","response","result","wrap","_context5","prev","next","sent","code","_x5","apply","getAllComments","_ref17","_callee11","_context11","_x11","Header","visible","visible1","handleLogout","Cookies","remove","props","showDrawer","onClose","showDrawer1","onClose1","userid","postCount","reduce","cur","posterId","_id","react_default","react_router_dom","to","username","style","backgroundImage","concat","avatar","drawer","title","placement","closable","width","textAlign","fontSize","maxWidth","src","alt","email","userComments","moment","registerTime","fromNow","es_button","height","padding","connect","message","Post","content","editorState","html","handleTitle","event","target","value","trim","handleContent","JSON","stringify","toHTML","handleSubmit","parse","_immutable","currentContent","b","selectionAfter","anchorKey","d","blockMap","text","setTimeout","postSubmit","history","push","input","placeholder","onChange","braft_editor_dist_default","_ref6","_ref7","_callee4","_context4","_x4","Panel","collapse","SideArtical","Fragment","calendar","fullscreen","defaultActiveKey","header","href","PostLists","handleUpdate","_ref","updatePost","_this3","back_top","list","itemLayout","size","pagination","pageSize","dataSource","footer","renderItem","item","Item","actions","star","icon","marginRight","zan","commentCount","extra","postTime","Meta","es_avatar","posterAvatar","description","posterName","side_artical_SideArtical","_ref15","_callee9","_context9","_x9","SideBar","posterEmail","TextArea","CommentList","es_comment","Editor","_ref2","onSubmit","submitting","es_form","rows","htmlType","loading","SendComment","who","time","format","val","len","postTitle","updateUser","handleChange","e","getComments","_this$state","_this$props$user","comment_Editor","comment_CommentList","_ref11","_ref12","_callee7","_context7","_x7","_ref13","_ref14","_callee8","_context8","_x8","_ref16","_callee10","_context10","_x10","PostView","match","params","viewPost","outputContent","side_bar_SideBar","dangerouslySetInnerHTML","__html","comment_comment","_ref9","_ref10","_callee6","_context6","_x6","beforeUpload","file","isJPG","error","isLt2M","Register1","password","password2","name","defineProperty","toLogin","register","handleAvatar","status","img","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","imageUrl","validateToNextPassword","rule","form","confirmDirty","validateFields","force","compareToFirstPassword","getFieldValue","uploadButton","getFieldDecorator","react_router","rules","required","prefix","color","hasFeedback","validator","upload","listType","showUploadList","Register","create","_callee","_context","_x","Login1","toRegister","login","login_Item","Login","_ref3","_ref4","_callee2","_context2","_x2","MyPostsList","deletePost","console","log","filter","position","skeleton","active","overflow","textOverflow","whiteSpace","top","right","badge","backgroundColor","_ref18","_callee12","_context12","_x12","MyCommentsList","deleteComment","_this$props","datetime","_ref19","_callee13","_context13","_x13","Personal","bordered","border","personal_Item","path","component","Main","getUser","header_header","_ref5","_callee3","_context3","_x3","ReactDOM","render","es","store"],"mappings":"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","file":"static/js/main.ebbf63a8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../assets/css/game.less'\r\nimport {Button, Icon, message} from 'antd'\r\n\r\nconst info = () => {\r\n  message.info('Game Over')\r\n}\r\n\r\nconst shapes = \r\n  [[0x6600],\r\n  [0x2222,0xf00],\r\n  [0xc600,0x2640],\r\n  [0x6c00,0x4620],\r\n  [0x4460,0x2e0,0x6220,0x740],\r\n  [0x2260,0xe20,0x6440,0x4700],\r\n  [0x2620,0x720,0x2320,0x2700]]\r\n\r\nlet map\r\n\r\nlet shape, currShapeInfo, bak, run\r\n\r\nexport default class Game extends Component {\r\n\r\n  state = {\r\n    count: 0,\r\n  }\r\n\r\n  start = () => {   // 开始\r\n    this.stop()\r\n    shape = shapes[~~(Math.random() * 7)];\r\n    bak = currShapeInfo = {\r\n      fk: [], \r\n      y: 0, \r\n      x: 4, \r\n      s: ~~(Math.random() * 4)\r\n    }\r\n    this.rotate(0)\r\n    run = setInterval(() => this.down(), 300)\r\n  } \r\n\r\n  stop = () => {\r\n    clearInterval(run)\r\n    map = eval(\"[\" + Array(23).join(\"0x801,\") + \"0xfff]\")\r\n    this.setState({count: 0})\r\n  }\r\n\r\n  new = () => {\r\n    shape = shapes[~~(Math.random() * 7)];\r\n    bak = currShapeInfo = {\r\n      fk: [], \r\n      y: 0, \r\n      x: 4, \r\n      s: ~~(Math.random() * 4)\r\n    }\r\n    this.rotate(0)\r\n  }\r\n\r\n  over = () => {    // 结束\r\n    map = eval(\"[\" + Array(23).join(\"0x801,\") + \"0xfff]\")\r\n    clearInterval(run)\r\n    return info()\r\n  }\r\n\r\n\r\n  rotate = (num) => {   // 翻转\r\n    let flip = shape[currShapeInfo.s = (currShapeInfo.s + num) % shape.length]  // 翻转后的形状\r\n    for(let i = 0; i < 4; i++)\r\n      currShapeInfo.fk[i] = (flip >> (12 - i * 4) & 15) << currShapeInfo.x\r\n    this.update(this.is())\r\n  }\r\n\r\n  update = (t) => {   // 显示\r\n    bak = {\r\n      fk: currShapeInfo.fk.slice(0), \r\n      y: currShapeInfo.y, \r\n      x: currShapeInfo.x, \r\n      s: currShapeInfo.s\r\n    }\r\n    if(t) \r\n      return\r\n    for(var i = 0, a2 = \"\"; i < 22; i++) {\r\n      a2 += map[i].toString(2).slice(1, -1) + \"<br/>\"\r\n    }\r\n    for(let i = 0, n; i < 4; i++) {\r\n      if(/([^0]+)/.test(bak.fk[i].toString(2).replace(/1/g, \"\\u25a1\"))) {\r\n        a2 = a2.substr(0, n = (bak.y + i + 1) * 15 - RegExp.$_.length - 4) + RegExp.$1 + a2.slice(n + RegExp.$1.length)\r\n      }\r\n    }\r\n    if (document.getElementById(\"view\")) {\r\n      document.getElementById(\"view\").innerHTML = a2.replace(/1/g, \"\\u25a0\").replace(/0/g, \"\\u3000\")\r\n    }\r\n  }\r\n\r\n  is = () => {  \r\n    for(let i = 0; i < 4; i++)\r\n      if((currShapeInfo.fk[i] & map[currShapeInfo.y + i]) !== 0) \r\n        return currShapeInfo = bak\r\n  }\r\n\r\n  down = () => {    // 下移\r\n    ++currShapeInfo.y\r\n    if (this.is()) {\r\n      for(let i = 0; i < 4 && currShapeInfo.y + i < 22; i++)\r\n        if((map[currShapeInfo.y+i] |= currShapeInfo.fk[i]) === 0xfff) {\r\n          map.splice(currShapeInfo.y + i, 1)\r\n          map.unshift(0x801)\r\n          let a = this.state.count + 1\r\n          this.setState({\r\n            count: a,\r\n          })\r\n        }\r\n      if(map[1] !== 0x801) return this.over()\r\n      this.new()\r\n    }\r\n    this.update()\r\n  }\r\n\r\n  move = (t = 2, k = 1) => {    // 移动\r\n    currShapeInfo.x += k\r\n    for(let i = 0; i < 4; i++)\r\n      currShapeInfo.fk[i] *= t\r\n    this.update(this.is())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div id=\"view\"></div>\r\n        <div className=\"control\">\r\n          <Button className=\"begin\" type=\"primary\" onClick={this.start}>开始游戏</Button>\r\n          <Button className=\"stop\" type=\"primary\" onClick={this.stop}>结束游戏</Button>\r\n          <div className=\"score\">\r\n            总得分：<span>{this.state.count}</span>\r\n          </div>\r\n          <Icon className='btn up' theme=\"filled\" onClick={() => this.rotate(1)} type=\"up-circle\"></Icon>\r\n          <Icon className='btn down' theme=\"filled\" onClick={this.down} type=\"down-circle\"></Icon>\r\n          <Icon className='btn left' theme=\"filled\" onClick={() => this.move(2, 1)} type=\"left-circle\"></Icon>\r\n          <Icon className='btn right' theme=\"filled\" onClick={() => this.move(0.5, 1)} type=\"right-circle\"></Icon>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","export const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\n\r\nexport const ERROR_MSG = 'ERROR_MSG'\r\n\r\nexport const RECEIVE_USER = 'RECEIVE_USER'\r\n\r\nexport const RESET_USER = 'RESET_USER'\r\n\r\nexport const POST_SUBMIT = 'POST_SUBMIT'\r\n\r\nexport const RECEIVE_POSTLIST = 'RECEIVE_POSTLIST'\r\n\r\nexport const RECEIVE_POST = 'RECEIVE_POST'\r\n\r\nexport const SEND_COMMENT = 'SEND_COMMENT'\r\n\r\nexport const RECEIVE_COMMENTS = 'RECEIVE_COMMENTS'\r\n\r\nexport const RECEIVE_UPDATE_POST = 'RECEIVE_UPDATE_POST'\r\n\r\nexport const RECEIVE_ALL_COMMENTS = 'RECEIVE_ALL_COMMENTS' \r\n\r\nexport const RECEIVE_DELETE_POST = 'RECEIVE_DELETE_POST' \r\n\r\nexport const RECEIVE_DELETE_COMMENT = 'RECEIVE_DELETE_COMMENT' ","import { combineReducers } from 'redux'\r\nimport { AUTH_SUCCESS, ERROR_MSG, RECEIVE_USER, RESET_USER, POST_SUBMIT, \r\n  RECEIVE_POSTLIST, RECEIVE_POST, SEND_COMMENT, RECEIVE_COMMENTS, \r\n  RECEIVE_UPDATE_POST, RECEIVE_ALL_COMMENTS, RECEIVE_DELETE_POST, \r\n  RECEIVE_DELETE_COMMENT } from './action-types'\r\n\r\nconst initUser = {redirectTo: ''}\r\n\r\n// 产生user状态的reducer\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS: \r\n      return {...action.data, redirectTo: '/'}\r\n    case ERROR_MSG:\r\n      return {...state, msg: action.data}\r\n    case RECEIVE_USER: \r\n      return action.data\r\n    case RESET_USER:\r\n      return {...initUser, msg: action.data}\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nconst initPost = {}\r\n\r\nfunction post(state = initPost, action) {\r\n  switch (action.type) {\r\n    case POST_SUBMIT:\r\n      return {...action.data}\r\n    case RECEIVE_UPDATE_POST:\r\n      return {...action.data}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initPosts = []\r\nfunction posts(state = initPosts, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_POSTLIST:\r\n      return action.data\r\n    case RECEIVE_DELETE_POST: \r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initViewPost = {}\r\nfunction postview(state = initViewPost, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_POST: \r\n      return action.data\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nconst initComment = {}\r\nfunction comment(state = initComment, action) {\r\n  switch(action.type) {\r\n    case SEND_COMMENT:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initComments = {}\r\nfunction comments(state = initComments, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_COMMENTS:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initAllComments = {}\r\nfunction allComments(state = initAllComments, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_ALL_COMMENTS:\r\n      return action.data\r\n    case RECEIVE_DELETE_COMMENT: \r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  user, post, posts, postview, comment, comments, allComments\r\n})","// redux 最核心的管理对象模块\r\n\r\n// 应用中间件\r\nimport { createStore, applyMiddleware } from 'redux'\r\n// 引入异步\r\nimport thunk from 'redux-thunk' \r\n// 引入工具函数\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport reducers from './reducers'\r\n\r\n// 向外暴露store对象\r\nexport default createStore(reducers, \r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)","import axios from 'axios'\r\n\r\nexport default function ajax(url = '', data = {}, type = 'GET') {\r\n  if (type === 'GET') {\r\n    let urlStr = ''\r\n    Object.keys(data).forEach(key => {\r\n      urlStr += key + '=' + data[key] + '&'\r\n    })\r\n    if(urlStr) {\r\n      urlStr = urlStr.substring(0, urlStr.length - 1)\r\n      url = url + '?' + urlStr\r\n    }\r\n    return axios.get(url)\r\n  } else if (type === 'POST'){\r\n    return axios.post(url, data)\r\n  }\r\n}","import ajax from './ajax'\r\n\r\nexport const reqRegister = (user) => ajax('/register', user, 'POST')\r\nexport const reqLogin = (user) => ajax('/login', user, 'POST')\r\nexport const reqUser = () => ajax('/user')\r\nexport const reqPost = (post) => ajax('/post', post, 'POST')\r\nexport const reqPostList = () => ajax('/postlist')\r\nexport const reqViewPost = ({_id}) => ajax('/viewpost', {_id}, 'POST')\r\nexport const reqComment = (comment) => ajax('/comment', comment, 'POST') \r\nexport const reqComments = ({_id}) => ajax('/comments', {_id}, 'POST') \r\nexport const reqUpdatePost = (update) => ajax('/updatePost', update, 'POST') \r\nexport const reqUpdateUser = (data) => ajax('/updateUser', data, 'POST') \r\nexport const reqAllComments = () => ajax('/allComments') \r\nexport const reqDeletePost = (data) => ajax('/deletePost', data, 'POST') \r\nexport const reqDeleteComment = (data) => ajax('/deleteComment', data, 'POST') ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getPostList, updatePost } from '../../redux/actions'\r\nimport '../../assets/css/post-list.less'\r\nimport { List, Avatar, Icon, BackTop, message } from 'antd'\r\nimport moment from 'moment'\r\nimport Cookies from 'js-cookie'\r\nimport SideArtical from '../../components/side-artical'\r\n\r\nlet a  //定时器\r\n\r\nconst info = () => {\r\n  message.info('请先登录！')\r\n}\r\n\r\nclass PostLists extends Component {\r\n\r\n  componentDidMount() {\r\n    a = setInterval(() => {\r\n      this.props.getPostList()\r\n    }, 1000)\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(a)\r\n  }\r\n\r\n  handleUpdate = ({type, count, _id}) => {\r\n    return () => {\r\n      const userid = Cookies.get('userid')\r\n      if(!userid) {\r\n        return info()\r\n      }\r\n      if (type === 'star-o') {\r\n        count += 1\r\n        this.props.updatePost({type, count, _id})\r\n      } else if (type === 'like-o') {\r\n        count += 1\r\n        this.props.updatePost({type, count, _id})\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {posts} = this.props\r\n    return (\r\n      <div className=\"post-list\">\r\n        <BackTop />\r\n        <div className=\"postid\">\r\n          <List \r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n              pageSize: 10,\r\n            }}\r\n            dataSource={posts}\r\n            footer={\r\n              <div>\r\n                <b>前端渣渣的个人博客网站</b>\r\n                <br /><br />\r\n                欢迎参观！！！\r\n              </div>\r\n            }\r\n\r\n            renderItem={item => (\r\n              <List.Item \r\n                key={item.title}\r\n                actions={[\r\n                  <span onClick={this.handleUpdate({type:\"star-o\", count: item.star, _id: item._id})}>\r\n                    <Icon type=\"star-o\" style={{ marginRight: 8 }} /> \r\n                    {item.star}\r\n                  </span>,\r\n                  <span onClick={this.handleUpdate({type:\"like-o\", count: item.zan, _id: item._id})}>\r\n                    <Icon type=\"like-o\" style={{ marginRight: 8 }} />\r\n                    {item.zan}\r\n                  </span>,\r\n                  <span>\r\n                    <Icon type=\"message\" style={{ marginRight: 8 }} />\r\n                    {item.commentCount}\r\n                  </span>,\r\n                ]}\r\n                extra={moment(+item.postTime).fromNow()}\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src={item.posterAvatar} />}\r\n                  title={<Link to={`/post:${item._id}`} className=\"title\">{item.title}</Link>}\r\n                  description={item.posterName}\r\n                />\r\n                <div className=\"content\">{item.content}</div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n        <SideArtical />\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default connect(\r\n  state => ({posts: state.posts, user: state.user}),\r\n  {getPostList, updatePost}\r\n)(PostLists)  ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../assets/css/comment.less'\r\nimport { comment, getComments, updateUser } from '../../redux/actions'\r\nimport { Comment, Avatar, Form, Button, List, Input, message } from 'antd'\r\nimport moment from 'moment'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst info = () => {\r\n  message.info('评论内容不能为空！')\r\n}\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <List\r\n    dataSource={comments}\r\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n    itemLayout=\"horizontal\"\r\n    renderItem={props => <Comment {...props} />}\r\n    pagination={{\r\n      pageSize: 5,\r\n    }}\r\n  />\r\n)\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <div>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit}>\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </div>\r\n)\r\n\r\nlet a\r\n\r\nclass SendComment extends Component {\r\n  state = {\r\n    submitting: false,\r\n    value: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    a = setInterval(() => {\r\n      const {_id} = this.props.postview\r\n      this.props.getComments({_id})\r\n    }, 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(a)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (!this.state.value) {\r\n      return info()\r\n    }\r\n    \r\n    this.setState({\r\n      submitting: true,\r\n    })\r\n    \r\n    setTimeout(() => {\r\n      const who = this.props.user._id  // 自己\r\n      const to = this.props.postview._id   // 帖子\r\n      const time = moment().format('L') // 评论时间\r\n      const val = this.state.value   // comment内容\r\n      const len = this.props.comments.length + 1    // 所有评论数\r\n      const postTitle = this.props.postview.title   // 帖子标题\r\n      this.props.comment({val, time, to, who, len, postTitle})\r\n      this.setState({\r\n        submitting: false,\r\n        value: ''\r\n      })\r\n      const count = this.props.user.userComments + 1  // 用户总评论数+1\r\n      this.props.updateUser({_id: who, count})\r\n    }, 500)\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { submitting, value } = this.state\r\n    const { username, avatar } = this.props.user\r\n    const { comments } = this.props\r\n    const userid = Cookies.get('userid')\r\n    return (\r\n      <div className=\"comment\">\r\n        {userid && \r\n          <Comment\r\n            avatar={\r\n              <Avatar\r\n              src={avatar}\r\n              alt={username}\r\n              />\r\n            }\r\n            content={\r\n              <Editor\r\n              onChange={this.handleChange}\r\n              onSubmit={this.handleSubmit}\r\n              submitting={submitting}\r\n              value={value}\r\n              />\r\n            }\r\n          />}\r\n        {comments.length > 0 && <CommentList comments={comments} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user, comments: state.comments, postview: state.postview}),\r\n  {comment, getComments, updateUser}\r\n)(SendComment)","import { AUTH_SUCCESS, ERROR_MSG, RECEIVE_USER, RESET_USER, \r\n  POST_SUBMIT, RECEIVE_POSTLIST, RECEIVE_POST, SEND_COMMENT, \r\n  RECEIVE_COMMENTS, RECEIVE_UPDATE_POST, RECEIVE_ALL_COMMENTS, \r\n  RECEIVE_DELETE_POST, RECEIVE_DELETE_COMMENT } from './action-types'\r\nimport { reqLogin, reqRegister, reqUser, reqPost, reqPostList, \r\n  reqViewPost, reqComment, reqComments, reqUpdatePost, reqUpdateUser, \r\n  reqAllComments, reqDeletePost, reqDeleteComment } from '../api'\r\n\r\nconst authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\r\nconst errorMsg = (msg) => ({type: ERROR_MSG, data: msg})\r\nconst receiveUser = (user) => ({type: RECEIVE_USER, data: user})\r\nconst postSuccess = (post) => ({type: POST_SUBMIT, data: post})\r\nconst receivePostList = (posts) => ({type: RECEIVE_POSTLIST, data: posts})\r\nconst receivePost = (post) => ({type: RECEIVE_POST, data: post})\r\nconst sendComment = (comment) => ({type: SEND_COMMENT, data: comment})\r\nconst receiveComments = (id) => ({type: RECEIVE_COMMENTS, data: id})\r\nconst receiveUpdatePost = (post) => ({type: RECEIVE_UPDATE_POST, data: post})\r\nconst receiveAllComments = (comments) => ({type: RECEIVE_ALL_COMMENTS, data: comments})  \r\nconst receiveDeletePost = (id) => ({type: RECEIVE_DELETE_POST, data: id})  \r\nconst receiveDeleteComment = (id) => ({type: RECEIVE_DELETE_COMMENT, data: id})  \r\nexport const resetUser = (msg) => ({type: RESET_USER, data: msg})\r\n\r\n// 注册\r\nexport const register = ({username, password, email, avatar}) => {\r\n  return async dispatch => {\r\n    const response = await reqRegister({username, password, email, avatar})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(authSuccess(result.data))\r\n    } else if (result.code === 1) {\r\n      dispatch(errorMsg(result.msg))\r\n    }\r\n  }\r\n}\r\n// 登录\r\nexport const login = ({username, password}) => {\r\n  return async dispatch => {\r\n    const response = await reqLogin({username, password})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(authSuccess(result.data))\r\n    } else if (result.code === 1) {\r\n      dispatch(errorMsg(result.msg))\r\n    }\r\n  }\r\n}\r\n// 获取用户信息\r\nexport const getUser = () => {\r\n  return async dispatch => {\r\n    const response = await reqUser()\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receiveUser(result.data))\r\n    } else if (result.code === 1) {\r\n      dispatch(resetUser(result.msg))\r\n    }\r\n  }\r\n}\r\n// 发帖\r\nexport const postSubmit = ({title, content, posterId, html}) => {\r\n  return async dispatch => {\r\n    const response = await reqPost({title, content, posterId, html})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(postSuccess(result.data))\r\n    } \r\n  }\r\n}\r\n// 获取帖子列表\r\nexport const getPostList = () => {\r\n  return async dispatch => {\r\n    const response = await reqPostList()\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receivePostList(result.data))\r\n    }\r\n  }\r\n}\r\n// 获取帖子\r\nexport const viewPost = ({_id}) => {\r\n  return async dispatch => {\r\n    const response = await reqViewPost({_id})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receivePost(result.data))\r\n    }\r\n  }\r\n}\r\n// 发表评论\r\nexport const comment = ({val, time, to, who, len, postTitle}) => {\r\n  return async dispatch => {\r\n    const response = await reqComment({val, time, to, who, len, postTitle})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(sendComment(result.data))\r\n    }\r\n  }\r\n}\r\n// 获取评论列表\r\nexport const getComments = ({_id}) => {\r\n  return async dispatch => {\r\n    const response = await reqComments({_id})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receiveComments(result.data))\r\n    }\r\n  }\r\n}\r\n\r\n// 更新star和like\r\nexport const updatePost = (update) => {\r\n  return async dispatch => {\r\n    const response = await reqUpdatePost(update)\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receiveUpdatePost(result.data))\r\n    }\r\n  }\r\n}\r\n\r\n// 更新用户评论数\r\n  export const updateUser = (data) => {\r\n    return async dispatch => {\r\n      const response = await reqUpdateUser(data)\r\n      const result = response.data\r\n      if (result.code === 0) {\r\n        dispatch(receiveUser(result.data))\r\n      }\r\n    }\r\n  }\r\n\r\n// 获取所有评论\r\nexport const getAllComments = () => {\r\n  return async dispatch => {\r\n    const response = await reqAllComments()\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receiveAllComments(result.data))\r\n    }\r\n  }\r\n}\r\n// 删除帖子及帖子相关的评论\r\nexport const deletePost = (_id) => {\r\n  return async dispatch => {\r\n    const response = await reqDeletePost({_id})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receiveDeletePost(result.data))\r\n    }\r\n  }\r\n}\r\n\r\n// 删除评论\r\nexport const deleteComment = (_id) => {\r\n  return async dispatch => {\r\n    const response = await reqDeleteComment({_id})\r\n    const result = response.data\r\n    if (result.code === 0) {\r\n      dispatch(receiveDeleteComment(result.data))\r\n    }\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport { resetUser } from '../../redux/actions'\r\nimport '../../assets/css/header.less'\r\nimport { Drawer, Button } from 'antd'\r\nimport moment from 'moment'\r\n\r\nclass Header extends Component {\r\n\r\n  state = { \r\n    visible: false,\r\n    visible1: false,\r\n  }\r\n\r\n  handleLogout = () => {\r\n    Cookies.remove('userid')\r\n    this.props.resetUser()\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    })\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  showDrawer1 = () => {\r\n    this.setState({\r\n      visible1: true,\r\n    })\r\n  }\r\n\r\n  onClose1 = () => {\r\n    this.setState({\r\n      visible1: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const userid = Cookies.get('userid')\r\n    const { user } = this.props\r\n    const postCount = this.props.posts.reduce((prev, cur) => {\r\n      if (cur.posterId === user._id) {\r\n        prev += 1\r\n      }\r\n      return prev\r\n    }, 0)\r\n    if (userid) {\r\n      return (\r\n        <div className=\"header\">\r\n          <div className=\"headerBar\">\r\n            <ul className=\"headerList\">\r\n              <li><Link to=\"/\">首页</Link></li>\r\n              <li><Link to=\"/personal\">个人中心</Link></li>\r\n              <li><Link to=\"/post\">我要发帖</Link></li>\r\n              {/* <li><Link to=\"/picture\">超清图库</Link></li> */}\r\n              <li><Link to=\"/game\">小游戏</Link></li>\r\n            </ul>\r\n            {/* <div className=\"drawer\">\r\n              <span type=\"primary\" onClick={this.showDrawer1}>\r\n                <Icon style={{fontSize: '40px', backgroundColor: '#333', marginTop: 8, margin: 8}} type=\"menu-fold\"></Icon>\r\n              </span>\r\n              <Drawer\r\n                title={user.username}\r\n                placement=\"right\"\r\n                closable={false}\r\n                onClose={this.onClose1}\r\n                maskClosable={true}\r\n                visible={this.state.visible1}\r\n                width='300px'\r\n                bodyStyle={{padding: 0}}\r\n              >\r\n                \r\n                <List\r\n                  size=\"large\"\r\n                  bordered\r\n                  dataSource={links}\r\n                  style={{border: 0}}\r\n                  renderItem={item => <List.Item style={linkStyle}>{item}</List.Item>}\r\n                />\r\n                <Button style={layout} type=\"primary\" onClick={this.handleLogout}>退出登陆</Button>\r\n              </Drawer>\r\n            </div> */}\r\n            <div className=\"headerRight\">\r\n              <div className=\"name\">{user.username}</div>\r\n              <div className=\"drawer\">\r\n                <span onClick={this.showDrawer} className=\"avatar\" style={{backgroundImage: `url(${user.avatar})`}}></span>\r\n                <Drawer\r\n                  title=\"用户信息\"\r\n                  placement=\"right\"\r\n                  closable={false}\r\n                  onClose={this.onClose}\r\n                  visible={this.state.visible}\r\n                  width=\"390px\"\r\n                >\r\n                  <div style={{textAlign: 'center', fontSize: '20px'}}>\r\n                    <br/><br/><br/>\r\n                    <div>\r\n                      <img style={{maxWidth: 100}} src={user.avatar} alt=\"avatar\"/>\r\n                    </div>\r\n                    <br/><br/><br/>\r\n                    <div>\r\n                      <div>用户名: {user.username}</div><br/>\r\n                      <div>邮箱: {user.email}</div><br/>\r\n                      <div>帖子: {postCount}</div><br/>\r\n                      <div>评论: {user.userComments}</div><br/>\r\n                      <div>blog 龄: {moment(+user.registerTime).fromNow()}</div><br/>\r\n                    </div>\r\n                    <br/><br/><br/>\r\n                    <div>\r\n                      <Button style={{width: '200px', height: 50, fontSize: 20, padding: 10}} onClick={this.handleLogout}>退出登陆</Button>\r\n                    </div>\r\n                  </div>\r\n                </Drawer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"header\">\r\n          <div className=\"headerBar\">\r\n            <ul className=\"headerList\">\r\n              <li><Link to=\"/\">首页</Link></li>\r\n              <li><Link to=\"/picture\">超清图库</Link></li>\r\n              <li><Link to=\"/game\">小游戏</Link></li>\r\n            </ul>\r\n            <ul className=\"headerList2\">\r\n              <li><Link to=\"/login\">登录</Link></li>\r\n              <li><Link to=\"/register\">注册</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user, posts: state.posts}), \r\n  {resetUser}\r\n)(Header)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../assets/css/post.less'\r\nimport { Input, Button, message } from 'antd'\r\nimport { postSubmit } from '../../redux/actions'\r\nimport 'braft-editor/dist/index.css'\r\nimport BraftEditor from 'braft-editor'\r\n\r\nconst info = () => {\r\n  message.info('标题及内容不能为空！');\r\n}\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    editorState: null,\r\n    html: '',\r\n    posterId: '',\r\n  }\r\n\r\n  handleTitle = (event) => {\r\n    const title = event.target.value.trim()\r\n    if (title === '') {\r\n      return info()\r\n    }\r\n    this.setState({title})\r\n  }\r\n\r\n  handleContent = (editorState) => {\r\n    if (this.state.posterId === '') {\r\n      this.setState({posterId: this.props.user._id})\r\n    }\r\n    this.setState({\r\n      content: JSON.stringify(editorState),\r\n      html: editorState.toHTML(),\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (!this.state.content) {\r\n      return info()\r\n    }\r\n    const a = JSON.parse(this.state.content)._immutable.currentContent\r\n    const b = a.selectionAfter.anchorKey\r\n    const c = a.blockMap\r\n    const d = c[b].text.trim()\r\n    if(!d || !this.state.title || !this.state.content) {\r\n      return info()\r\n    }\r\n    this.setState({content: d})\r\n    setTimeout(()=> {\r\n      if (this.state.title && this.state.content) {\r\n        this.props.postSubmit(this.state)\r\n      }\r\n      this.props.history.push('/')\r\n    }, 500)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"outer\">\r\n        {/* <h1>探索黑科技</h1> */}\r\n        <div className=\"inter\">\r\n          <div className=\"title\">帖子标题：\r\n            <Button className=\"button\" onClick={this.handleSubmit}>发布</Button>\r\n          </div>\r\n          <br/>\r\n          <Input className=\"input\" type=\"text\" placeholder=\"请输入帖子标题！\" onChange={this.handleTitle}></Input>\r\n          <br/><br/>\r\n          <div className=\"title\">帖子内容：</div>\r\n          <br/>\r\n          <div className=\"content\">\r\n            <BraftEditor onChange={this.handleContent}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user, post: state.post}),\r\n  {postSubmit}\r\n)(Post)","import React, { Component } from 'react'\r\nimport { Collapse, Calendar } from 'antd'\r\n\r\n\r\nconst Panel = Collapse.Panel\r\nexport default class SideArtical extends Component {\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n      <div className=\"sidebar\">\r\n        <Calendar fullscreen={false} />\r\n      </div>\r\n      <div className=\"sideArtical\">\r\n          <Collapse defaultActiveKey={['1']}>\r\n          {/* <Collapse> */}\r\n            <Panel header=\"个人项目\" key=\"1\">\r\n              <p><a href=\"/\">俄罗斯方块</a></p>\r\n              <p><a href=\"/\">纯 CSS 仿写小米官网首页</a></p>\r\n              <p><a href=\"/\">夏日绘板</a></p>\r\n              <p><a href=\"/\">行内登高自适应瀑布流</a></p>\r\n              <p><a href=\"/\">移动端 项目仿写</a></p>\r\n              <p><a href=\"/\">PC 端个人博客</a></p>\r\n            </Panel>\r\n            <Panel header=\"友情链接\" key=\"2\">\r\n              <p><a href=\"/\"> QQ 邮箱: 1021255794@qq.com</a></p>\r\n              <p><a href=\"https://github.com/juanjuanya\">Github: https://github.com/juanjuanya</a></p>\r\n              <p><a href=\"https://juejin.im/user/5d0f78ef51882531b66b2c14\">个人博客</a></p>\r\n            </Panel>\r\n            <Panel header=\"学习网站\" key=\"3\">\r\n              <p><a href=\"https://www.github.com/\">大型专业学习交友网站</a></p>\r\n              <p><a href=\"https://developer.mozilla.org/zh-CN/\">MDN Web 文档</a></p>\r\n              <p><a href=\"https://stackoverflow.com/\">Learn Share Build</a></p>\r\n              <p><a href=\"http://www.ruanyifeng.com\">阮一峰的网络日志</a></p>\r\n              <p><a href=\"https://imququ.com/\">Jerry Qu 专注前端开发</a></p>\r\n              <p><a href=\"https://developers.google.com/web/fundamentals/primers/promises\">Promise</a></p>\r\n              <p><a href=\"https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html\" > We have a problem with promises </a></p>\r\n              <p><a href=\"https://medium.com/@bluepnume/even-with-async-await-you-probably-still-need-promises-9b259854c161\">Even with async/await, raw promises are still key to writing optimal concurrent javascript</a></p>\r\n              <p><a href=\"https://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line/\">JavaScript template engine in just 20 lines</a></p>\r\n              <p><a href=\"https://nodejs.org/dist/latest-v11.x/docs/api/\">Index | Node.js v11.15.0 Documentation</a></p>\r\n              <p><a href=\"https://expressjs.com/zh-cn/4x/api.html#req.is\">Express 4.x - API 参考</a></p>\r\n              <p><a href=\"https://github.com/koajs/koa/wiki\">Home · koajs/koa Wiki</a></p>\r\n              <p><a href=\"https://reactjs.org/\">React – A JavaScript library for building user interfaces</a></p>\r\n              <p><a href=\"https://ant.design/docs/react/introduce-cn\">Ant Design of React - Ant Design</a></p>\r\n              <p><a href=\"https://babeljs.io/\">Babel · The compiler for next generation JavaScript</a></p>\r\n              <p><a href=\"http://element.eleme.io/#/zh-CN\">Element - 网站快速成型工具</a></p>\r\n              <p><a href=\"https://redux.js.org/introduction/motivation\">Motivation · Redux</a></p>\r\n              <p><a href=\"https://reacttraining.com/react-router/web/guides/quick-start\">React Router: Declarative Routing for React.js</a></p>\r\n            </Panel>\r\n          </Collapse>\r\n        </div>\r\n        </>\r\n    )\r\n  }\r\n} ","import React, { Component } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport default class SideBar extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"avatar\">\r\n          <img src={this.props.post.posterAvatar} alt=\"avatar\"/>\r\n          <p>用户名：{this.props.post.posterName}</p>\r\n          <p>邮箱：{this.props.post.posterEmail}</p>\r\n          <Button className=\"btn\">关注</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../assets/css/postview.less'\r\nimport { BackTop } from 'antd'\r\nimport { viewPost } from '../../redux/actions'\r\nimport 'braft-editor/dist/output.css'\r\nimport SideBar from '../../components/side-bar'\r\nimport SendComment from '../comment/comment'\r\n\r\n\r\nclass PostView extends Component {\r\n  \r\n  componentDidMount() {\r\n    const _id = this.props.match.params._id.slice(1)\r\n    this.props.viewPost({_id})\r\n  }\r\n\r\n  render() {\r\n    const post = this.props.postview\r\n    const outputContent = post.html\r\n    return (\r\n      <div className=\"postview\">\r\n        <BackTop />\r\n        <SideBar post={post} />\r\n        <div className=\"artical\">\r\n          <h1>{post.title}</h1>\r\n          <div className=\"braft-output-content\" dangerouslySetInnerHTML={{__html: outputContent}}></div>\r\n        </div>\r\n        <SendComment />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({postview: state.postview}),\r\n  {viewPost}\r\n)(PostView)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../assets/css/register.less'\r\nimport { Upload, message, Form, Icon, Input, Button } from 'antd'\r\nimport { register } from '../../redux/actions'\r\n\r\nconst Item = Form.Item\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader()\r\n  reader.addEventListener('load', () => callback(reader.result))\r\n  reader.readAsDataURL(img)\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJPG = file.type === 'image/jpeg'\r\n  if (!isJPG) {\r\n    message.error('You can only upload JPG file!')\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 1\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 1MB!')\r\n  }\r\n  return isJPG && isLt2M\r\n}\r\n\r\nclass Register1 extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    password2: '',\r\n    email: '',\r\n    avatar: '',\r\n    loading: false,\r\n  }\r\n\r\n  handleChange = (e, name) => {\r\n    this.setState({\r\n      [name]: e.target.value     // 属性名不是name，而是name的值\r\n    })\r\n  }\r\n\r\n  toLogin = () => {\r\n    this.props.history.replace('/login')\r\n  }\r\n\r\n  register = () => {\r\n    this.props.register(this.state)\r\n  }\r\n\r\n  handleAvatar = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true })\r\n      return\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n          avatar: imageUrl,\r\n          loading: false,\r\n        }),\r\n      )\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <span className=\"ant-upload-text\">上传头像</span>\r\n      </div>\r\n    )\r\n    const imageUrl = this.state.avatar\r\n    const { getFieldDecorator } = this.props.form\r\n    const {redirectTo} = this.props.user\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />\r\n    }\r\n    return (\r\n      <div className=\"register\">\r\n        <Form className=\"form\">\r\n          <Item>\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: 'Please input your username!' }],\r\n            })(\r\n              <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"请输入用户名\"\r\n                  onChange={(e) => {this.handleChange(e, 'username')}}\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item hasFeedback>\r\n            {getFieldDecorator('password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n                {\r\n                  validator: this.validateToNextPassword,\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  placeholder=\"请输入密码\"\r\n                  onChange={(e) => {this.handleChange(e, 'password')}}\r\n                />\r\n            )}\r\n          </Item>\r\n          <Item hasFeedback>\r\n            {getFieldDecorator('confirm', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                {\r\n                  validator: this.compareToFirstPassword,\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  placeholder=\"请确认密码\"\r\n                  onChange={(e) => {this.handleChange(e, 'password2')}}\r\n                />\r\n            )}\r\n          </Item>\r\n          <Item>\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ],\r\n            })(\r\n              <Input\r\n                  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"email\"\r\n                  placeholder=\"请输入 E-mail\"\r\n                  onChange={(e) => {this.handleChange(e, 'email')}}\r\n                />\r\n            )}\r\n          </Item>\r\n          <Item>\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader\"\r\n              showUploadList={false}\r\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n              beforeUpload={beforeUpload}\r\n              onChange={this.handleAvatar}\r\n            >\r\n              {imageUrl ? <img className=\"ant-img\" src={imageUrl} alt=\"avatar\" /> : uploadButton}\r\n            </Upload>\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"button\" onClick={this.register} >\r\n              注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n            </Button>\r\n            <Button type=\"primary\" className=\"button\" onClick={this.toLogin} >\r\n              登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;录\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst Register = Form.create({ name: 'normal_login' })(Register1)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {register}\r\n)(Register)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../../assets/css/login.less'\r\nimport { Form, Icon, Input, Button } from 'antd'\r\nimport { login } from '../../redux/actions'\r\n\r\nconst Item = Form.Item\r\n\r\nclass Login1 extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n  }\r\n\r\n\r\n  handleChange = (e, name) => {\r\n    this.setState({\r\n      [name]: e.target.value     // 属性名不是name，而是name的值\r\n    })\r\n  }\r\n\r\n  toRegister = () => {\r\n    this.props.history.replace('/register')\r\n  }\r\n\r\n  login = () => {\r\n    this.props.login(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    const { redirectTo } = this.props.user\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo}/>\r\n    }\r\n    return (\r\n      <div className=\"login\">\r\n        <Form onSubmit={this.handleSubmit} className=\"form\">\r\n          <Item>\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: 'Please input your username!' }],\r\n            })(\r\n              <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"请输入用户名\"\r\n                  onChange={(e) => {this.handleChange(e, 'username')}}\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item>\r\n            {getFieldDecorator('password', {\r\n              rules: [{required: true, message: 'Please input your password!',}],\r\n            })(\r\n              <Input\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  placeholder=\"请输入密码\"\r\n                  onChange={(e) => {this.handleChange(e, 'password')}}\r\n                />\r\n            )}\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"button\" onClick={this.login} >\r\n              登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;录\r\n            </Button>\r\n            <Button type=\"primary\" className=\"button\" onClick={this.toRegister} >\r\n              注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst Login = Form.create({ name: 'normal_login' })(Login1)\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(Login)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { List, Avatar, Skeleton, Badge } from 'antd'\r\nimport { getPostList, deletePost } from '../../redux/actions'\r\nimport moment from 'moment'\r\n\r\nclass MyPostsList extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getPostList()\r\n  }\r\n\r\n  deletePost = (_id) => {\r\n    console.log(_id)\r\n    this.props.deletePost(_id)\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    const posts = this.props.posts.filter(post => post.posterId === user._id)\r\n    return (\r\n      <div className=\"mypostlist\">\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={posts}\r\n          renderItem={item => (\r\n            <List.Item actions={[<span style={{color: '#6290ff'}}>edit</span>, <span style={{color: '#6290ff'}} onClick={() => this.deletePost(item._id)}>delete</span>]} style={{position: 'relative'}}>\r\n              <Skeleton avatar title={false} loading={item.loading} active>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar src={item.posterAvatar} />\r\n                  }\r\n                  title={<Link to={`/post:${item._id}`}>TITLE: {item.title}</Link>}\r\n                  description={<div style={{width: 600, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>CONTENT: {item.content}</div>}\r\n                />\r\n              </Skeleton>\r\n              <div style={{position: 'absolute', top: 1, right: 7}}>{moment(+item.postTime).fromNow()}</div>\r\n              <div>\r\n                <Link to={`/post:${item._id}`}>\r\n                  <Badge count={item.commentCount} style={{ backgroundColor: '#52c41a' }} />\r\n                </Link>\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user, posts: state.posts}),\r\n  {getPostList, deletePost}\r\n)(MyPostsList)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllComments, deleteComment } from '../../redux/actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { List, Avatar, Skeleton } from 'antd'\r\n\r\nclass MyCommentsList extends Component {\r\n\r\n  deleteComment = (_id, to) => {\r\n    console.log(_id, to)\r\n    this.props.deleteComment({_id, to})\r\n  }\r\n\r\n  render() {\r\n    const { user, allComments } = this.props\r\n    if (user && allComments) {\r\n      return (\r\n        <div>\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={allComments}\r\n            renderItem={item => (\r\n              <List.Item actions={[<span style={{color: '#6290ff'}}>edit</span>, <span style={{color: '#6290ff'}} onClick={() => this.deleteComment(item._id, item.to)}>delete</span>]}>\r\n                <Skeleton avatar title={false} loading={item.loading} active>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar src={user.avatar} />\r\n                    }\r\n                    title={<Link to={`/post:${item.to}`}>POST-TITLE: {item.postTitle}</Link>}\r\n                    description={<div style={{width: 600, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}>COMMENT: {item.content}</div>}\r\n                  />\r\n                </Skeleton>\r\n                <div>{item.datetime}</div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>fdaslk</div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user, allComments: state.allComments}),\r\n  {getAllComments, deleteComment}\r\n)(MyCommentsList)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\nimport '../../assets/css/personal.less'\r\nimport { Button, List, BackTop } from 'antd'\r\nimport { getAllComments } from '../../redux/actions'\r\nimport MyPostsList from './my-posts-list'\r\nimport MyCommentsList from './my-comments-list'\r\n\r\nconst Item = List.Item\r\n\r\nclass Personal extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getAllComments()\r\n  }\r\n\r\n  render() {\r\n    const {user} = this.props\r\n    return (\r\n      <div className=\"personal\">\r\n        <div className=\"sideBar\">\r\n          <div className=\"info\">\r\n            <div>\r\n              <img className=\"avatar\" src={user.avatar} alt=\"user'avatar\"/>\r\n            </div>\r\n            <p className=\"u\">User: {user.username}</p>\r\n            <p className=\"u\">E-mail: {user.email}</p>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"bar\">\r\n            <List\r\n              size=\"large\"\r\n              bordered\r\n              style={{border: 0}}\r\n            >\r\n              <Item style={{padding: 0}}>\r\n                <Button type=\"ghost\" className=\"barBtn\"><Link to=\"/personal/myPostsList\">我的帖子</Link></Button>\r\n              </Item>\r\n              <Item style={{padding: 0}}>\r\n                <Button type=\"ghost\" className=\"barBtn\"><Link to=\"/personal/myCommentsList\">我的评论</Link></Button>\r\n              </Item>\r\n            </List>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n        <BackTop />\r\n        <div className=\"view\">\r\n          <Switch>\r\n            <Route path='/personal/myCommentsList' component={MyCommentsList} />\r\n            <Route path='/personal' component={MyPostsList} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user, posts: state.posts, comments: state.comments}),\r\n  {getAllComments}\r\n)(Personal)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport Header from '../header/header'\r\nimport { getUser } from '../../redux/actions'\r\nimport Post from '../post/post'\r\nimport PostLists from '../post/post-lists'\r\nimport PostView from '../post/post-view'\r\n// import Picture from '../../components/picture'\r\nimport Register from '../register/register'\r\nimport Login from '../login/login'\r\nimport Game from '../../components/game'\r\nimport Personal from '../personal/personal'\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    const userid = Cookies.get('userid')\r\n    const { _id } = this.props.user\r\n    if (userid && !_id) {\r\n      this.props.getUser()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%'}}>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/register' component={Register} />\r\n          <Route path='/login' component={Login} />\r\n          <Route path=\"/post\" component={Post} />\r\n          <Route path=\"/post:_id\" component={PostView} /> \r\n          {/* <Route path=\"/picture\" component={Picture} />  */}\r\n          <Route path=\"/personal\" component={Personal} /> \r\n          <Route path=\"/game\" component={Game} /> \r\n          <Route component={PostLists} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {getUser}\r\n)(Main)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport './index.less'\r\n// import './socketIO/socket-io-client'\r\nimport store from './redux/store'\r\nimport Main from './containers/main/main'\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path='/' component={Main}></Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}